{"version":3,"sources":["ng://ng6-bootstrap4-automated-form-validation-lib/lib/ng6-bootstrap4-automated-form-validation-lib.service.ts","ng://ng6-bootstrap4-automated-form-validation-lib/lib/ng6-bootstrap4-automated-form-validation-lib.component.ts","ng://ng6-bootstrap4-automated-form-validation-lib/lib/form-validation.directive.ts","ng://ng6-bootstrap4-automated-form-validation-lib/lib/ng6-bootstrap4-automated-form-validation-lib.module.ts"],"names":["Ng6Bootstrap4AutomatedFormValidationLibService","Injectable","args","providedIn","Ng6Bootstrap4AutomatedFormValidationLibComponent","prototype","ngOnInit","Component","selector","template","FormValidationDirective","el","this","nativeElement","required","insertAdjacentHTML","name","onFocusout","target","value","classList","remove","add","type","Number","min","formData","form","controls","setErrors","incorrect","max","Directive","ElementRef","Input","HostListener","Ng6Bootstrap4AutomatedFormValidationLibModule","NgModule","imports","declarations","exports"],"mappings":"sUAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAaE,SAAAA,YAEAA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,mDACVC,SAAU,iIAJZ,GCAAC,EAAA,WAUE,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EACdC,KAAKD,GAAGE,cAAcC,UACxBF,KAAKD,GAAGE,cAAcE,mBACpB,WACA,oDACAJ,EAAGE,cAAcG,KACjB,kBAMNN,EAAAL,UAAAY,WADA,SACWC,GACLN,KAAKD,GAAGE,cAAcC,WACW,IAA/BF,KAAKD,GAAGE,cAAcM,MACxBP,KAAKD,GAAGE,cAAcO,UAAUC,OAAO,cAEvCT,KAAKD,GAAGE,cAAcO,UAAUE,IAAI,eAGN,UAA9BV,KAAKD,GAAGE,cAAcU,OAEtBC,OAAOZ,KAAKD,GAAGE,cAAcY,MAAQ,iBACrCD,OAAOZ,KAAKD,GAAGE,cAAcM,QAE7BP,KAAKc,SAASC,KAAKC,SAAShB,KAAKD,GAAGE,cAAcG,MAAMa,UAAU,CAAEC,WAAW,IAC/ElB,KAAKD,GAAGE,cAAcO,UAAUE,IAAI,eAEpCE,OAAOZ,KAAKD,GAAGE,cAAckB,KAAO,iBACpCP,OAAOZ,KAAKD,GAAGE,cAAcM,SAE7BP,KAAKc,SAASC,KAAKC,SAAShB,KAAKD,GAAGE,cAAcG,MAAMa,UAAU,CAAEC,WAAW,IAC/ElB,KAAKD,GAAGE,cAAcO,UAAUE,IAAI,qCAvC3CU,EAAAA,UAAS9B,KAAA,CAAC,CACTM,SAAU,mEAJQyB,EAAAA,gDAQjBC,EAAAA,MAAKhC,KAAA,CAAC,gCAaNiC,EAAAA,aAAYjC,KAAA,CAAC,QAAS,CAAC,uBArB1B,GCAAkC,EAAA,oDAICC,EAAAA,SAAQnC,KAAA,CAAC,CACRoC,QAAS,GAETC,aAAc,CAACnC,EAAkDM,GACjE8B,QAAS,CAACpC,EAAiDM,SAR7D","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Ng6Bootstrap4AutomatedFormValidationLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'enl-ng6-bootstrap4-automated-form-validation-lib',\n  template: `\n    <p>\n      ng6-bootstrap4-automated-form-validation-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class Ng6Bootstrap4AutomatedFormValidationLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\n@Directive({\n  selector: '[enlFormValidation]'\n})\nexport class FormValidationDirective {\n\n  @Input(\"formData\") formData: NgForm;\n\n  constructor(private el: ElementRef) {\n    if (this.el.nativeElement.required) {\n      this.el.nativeElement.insertAdjacentHTML(\n        \"afterend\",\n        '\\n<div class=\"invalid-feedback\">* Please Enter a ' +\n        el.nativeElement.name +\n        \".</div>\"\n      );\n    }\n  }\n\n  @HostListener(\"input\", [\"$event.target\"])\n  onFocusout(target) {\n    if (this.el.nativeElement.required) {\n      if (this.el.nativeElement.value != \"\") {\n        this.el.nativeElement.classList.remove(\"is-invalid\");\n      } else {\n        this.el.nativeElement.classList.add(\"is-invalid\");\n      }\n    }\n    if (this.el.nativeElement.type == \"number\") {\n      if (\n        Number(this.el.nativeElement.min || -999999999999999) >\n        Number(this.el.nativeElement.value)\n      ) {\n        this.formData.form.controls[this.el.nativeElement.name].setErrors({ incorrect: true });\n        this.el.nativeElement.classList.add(\"is-invalid\");\n      } else if (\n        Number(this.el.nativeElement.max || 999999999999999) <\n        Number(this.el.nativeElement.value)\n      ) {\n        this.formData.form.controls[this.el.nativeElement.name].setErrors({ incorrect: true });\n        this.el.nativeElement.classList.add(\"is-invalid\");\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Ng6Bootstrap4AutomatedFormValidationLibComponent } from './ng6-bootstrap4-automated-form-validation-lib.component';\nimport { FormValidationDirective } from './form-validation.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [Ng6Bootstrap4AutomatedFormValidationLibComponent, FormValidationDirective],\n  exports: [Ng6Bootstrap4AutomatedFormValidationLibComponent,FormValidationDirective]\n})\nexport class Ng6Bootstrap4AutomatedFormValidationLibModule { }\n"]}